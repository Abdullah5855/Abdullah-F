Q1:Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

SELECT f.title,
       c.name,
       COUNT(r.rental_id) AS rental_count
  FROM category AS c
       JOIN film_category AS fc
        ON c.category_id = fc.category_id
       
       JOIN film AS f
        ON f.film_id = fc.film_id

       JOIN inventory AS i
        ON f.film_id = i.film_id

       JOIN rental AS r
        ON i.inventory_id = r.inventory_id
 GROUP BY 1, 2
 ORDER BY 2, 1;

-------------------
Q2: Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories?

SELECT f.title AS "movie_title",
       c.name AS "category_name",
       f.rental_duration,
       NTILE(4) OVER (ORDER BY f.rental_duration  ) "quartile"
FROM film f
JOIN film_category fc
ON fc.film_id = f.film_id
JOIN category c
ON c.category_id = fc.category_id

-------------------
Q3: Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:

Category
Rental length category
Count


SELECT category_name,
       quartile,
       count(*)
FROM (SELECT c.name AS "category_name",
             f.rental_duration AS "rental_duration",
             NTILE(4) OVER (ORDER BY f.rental_duration  ) "quartile"
      FROM film f
      JOIN film_category fc
      ON fc.film_id = f.film_id
      JOIN category c
      ON c.category_id = fc.category_id
      WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music'))sub
GROUP BY 1,2
ORDER BY 1,2;

-------------------
Q4:Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.
SELECT
  DATE_PART('MONTH', rental_date) MONTHs,
  DATE_PART('Year', rental_date) Years,
  store.store_id,
  COUNT(*)
FROM rental
JOIN payment
  ON payment.rental_id = rental.rental_id
JOIN staff
  ON staff.staff_id = payment.staff_id
JOIN store
  ON store.store_id = staff.store_id
GROUP BY 1,
         2,
         3
order by 4 desc